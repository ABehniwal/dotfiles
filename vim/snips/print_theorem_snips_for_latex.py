calls = {
    "Thm": "theorem",
    "Proof": "proof",
    "Soln": "soln",
    "Cor": "corollary",
    "Lemma": "lemma",
    "Prop": "proposition",
    "Exer": "exercise",
    "Example": "example",
    "Def": "definition",
    "Fact": "fact",
    "Problem": "problem",
    "Remark": "remark",
    "Prob": "problem",
    "Claim": "claim",
    "Answer": "answer",
    "Hint": "hint",
    "Ques": "ques",
    "Conj": "conjecture",
}

generic_string = r"""snippet Upper "Upper environment"
\begin{envname}
__${1:<+Content+>}
\end{envname}
$0
endsnippet

snippet Upper[] "Upper environment with name"
\begin{envname}[${1:<+Citation+>}]
__${2:<+Content+>}
\end{envname}
$0
endsnippet

snippet lower "Starred lower environment"
\begin{envname*}
__${1:<+Content+>}
\end{envname*}
$0
endsnippet

snippet lower[] "Starred lower environment with name"
\begin{envname*}[${1:<+Citation+>}]
__${2:<+Content+>}
\end{envname*}
$0
endsnippet"""

print("# This file is autogenerated by print_theorem_snips.py,")
print("# so I don't recommend editing it")
print("# vim: readonly")
for key, val in calls.items():
    print("")
    final = generic_string
    final = final.replace("Upper", key)
    final = final.replace("lower", key.lower())
    final = final.replace("envname", val)
    final = final.replace("__", "\t")
    print(final.strip())
